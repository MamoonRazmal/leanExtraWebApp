  
  @inject NavigationManager NavigationManager
  @inject TorontoOnlineStorage torontoOnlineStorage

  @if(server is not null)
  {
  <li style="background-color: @Getcolor();">@server.Name in @server.City is <span style="color:@(server.IsOnline ?"green":"red")">@(server.IsOnline ? "Online" : "Offline")</span>
         <a href="/server/@server.ServerId" class="btn btn-link">  Edit
        </a>
        
@if(server.IsOnline)
{
<button type="button" class="btn btn-danger" @onclick="@(()=>{SetServerStatus(false);})">TurnOff</button>
} 
else{
    <button type="button" class="btn btn-outline-success" @onclick="@(()=>{SetServerStatus(true);})">TurnOn</button>
}
        <EditForm Model="server" FormName="@($"form-server{server.ServerId}" )" OnValidSubmit="@(()=>{delete(server.ServerId);})">
            <button class="btn btn-danger" type="submit">Delete</button>
        </EditForm>
        </li>
       

}
@code
{
[CascadingParameter (Name ="SelectedCity")]
public string? getCitynamefromCascade{get;set;}
public string? selectedCity{get;set;}
  [Parameter]
public string ? Cityname {get; set;}
[Parameter]
public Server? server{get;set;}
protected override void OnParametersSet()
{

}
  private void delete(int serverId)
      {
      if(serverId>0)
        {
        ServersRepository.DeleteServer(serverId);
      //  server = ServersRepository.GetServerByCity(Cityname);
      NavigationManager.NavigateTo("/server",true);
          }

    }  
    public string Getcolor()
    {
      if(getCitynamefromCascade is not null)
      {
        switch(getCitynamefromCascade)
        {
          case "Toronto": return "powderblue";
          case "Montreal": return "lightgray";
          case "Ottawa" : return "palegreen";
          case "Calgary" :return "pink";
          case "Halifax": return "white";
          default : return "white";
        }
      }
      else{
        return "white";
          }
    }
    private void SetServerStatus(bool status)
    {
     
      if(server is not null)
      {
           
           if(this.server.IsOnline !=status)
           {
            if(this.server.City.Equals("Toronto",StringComparison.OrdinalIgnoreCase))
            { 
              var num = torontoOnlineStorage.GetNumberServersOnline();
              if(status)
              {
                  torontoOnlineStorage.SetNumbersServerOnline(num+1);
              }
              else if(num >1)
              {
                 torontoOnlineStorage.SetNumbersServerOnline(num-1);
              }
            }
            this.server.IsOnline = status;
           }
      }
    }
}   

