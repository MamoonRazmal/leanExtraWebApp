  
  @inject NavigationManager NavigationManager
  @if(server is not null)
  {
  <li>@server.Name in @server.City is <span style="color:@(server.IsOnline ?"green":"red")">@(server.IsOnline ? "Online" : "Offline")</span>
         <a href="/server/@server.ServerId" class="btn btn-link">  Edit
        </a>
        <EditForm Model="server" FormName="@($"form-server{server.ServerId}" )" OnValidSubmit="@(()=>{delete(server.ServerId);})">
            <button class="btn btn-danger" type="submit">Delete</button>
        </EditForm>
        </li>

}
        @code
        {
             [Parameter]
            public string ? Cityname {get; set;}
            [Parameter]
            public Server? server{get;set;}
            protected override void OnParametersSet()
            {

            }
              private void delete(int serverId)
                 {
                 if(serverId>0)
                    {
                    ServersRepository.DeleteServer(serverId);
                  //  server = ServersRepository.GetServerByCity(Cityname);
                  NavigationManager.NavigateTo("/server",true);
                     }
       
                }  
          }