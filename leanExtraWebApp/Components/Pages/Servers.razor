@page "/server"
@rendermode InteractiveServer
<h3>Servers</h3>
<br />
<br />
<div class="container-fluid text-center">
    <div class="row w-50">
        <CityList @ref="cityList" selectedcitysig="HandleCitySelection"></CityList>
    </div>
</div>

<br />
<br />
<ServerComponent @rendermode="InteractiveServer"></ServerComponent>
<ServerFilter @ref="serverFilter" servers=@servers filtersignal="HandleFilter"></ServerFilter>
<CascadingValue Name="SelectedCity" Value="@selectedcity">
<ServerList @rendermode="InteractiveServer" Cityname="@selectedcity" filter="@filterName"></ServerList>
</CascadingValue>
@code {
    private CityList? cityList;
    private ServerFilter? serverFilter;
    public string filterName { get; set; } = "";
    private string selectedcity = "Toronto";
    private string selectedDivBgColor = "bg-white";
    //@server.ServerId
    private List<Server> servers = ServersRepository.GetServerByCity("Toronto");
    private List<string> cityname = CitiesRepository.GetCities();
    private List<string> citypic = CitiesRepository.GetCitesiPic();

    private void delete(int serverId)
    {
        if (serverId > 0)
        {
            ServersRepository.DeleteServer(serverId);
        }

    }

    public void HandleFilter(string name)
    {
        filterName = name;
        serverFilter?.clearSelection();

        //this.servers = ServersRepository.SearchServers(name);
    }

    public void HandleCitySelection(string name)
    {
        selectedcity = name;
        this.filterName = string.Empty;
        cityList?.clearSelection();


    }
    
   

}
