@page "/addserver"
@inject NavigationManager NavigationManager
@inject SessionStorage sessionStorage
@inject IServersEFCoreRepository ServersEFCoreRepository 


<EditForm Model="server" FormName="formServer" OnvalidSubmit="submit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
 
<div class="row mb-3">
 <div class="col-2">
    <label class="col-form-label">Name</label>
 </div>
<div class="col-6">
 <InputText @bind-Value="server.Name" class="form-control"></InputText>
</div>
<div class="col">
 <ValidationMessage For="()=>server.Name"></ValidationMessage>
</div>
</div>

<div class="row mb-3">
 <div class="col-2">
    <label class="col-form-label" >Name</label>
 </div>
<div class="col-6">
 <InputText @bind-Value="server.City" class="form-control"></InputText>
</div>
</div>

<div class="row mb-3">
 <div class="col-2">
    <label class="col-form-label">Available</label>
 </div>
<div class="col-6">
<InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
</div>
</div>
<br>
<button class="btn btn-primary" type="submit">save</button>
<a href=" /server" class="btn btn-primary">close</a>

</EditForm>
<button @onclick="getInfo">get info</button>
@if(servercopy is not null)
{
@servercopy.City <p>got from</p>
}

}
@code
{
    public Server? servercopy;
 public async Task getInfo()
 {
    this.servercopy = await this.sessionStorage.GetServerAsync();

 }
[SupplyParameterFromForm]
public Server server{get;set;} = new Server(){IsOnline = false};

public void submit()
{
    
    if(server is not null)
    {
        ServersEFCoreRepository.AddServer(server);
    }
    NavigationManager.NavigateTo("/server");

}



}